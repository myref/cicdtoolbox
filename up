#!/bin/bash
default_user_password="netcicd01"
sp="/-\|"
sc=0
spin() {
   printf -- "${sp:sc++:1}  ( ${t} sec.) \r"
   ((sc==${#sp})) && sc=0
   sleep 1
   let t+=1
}

endspin() {
   printf "\r%s\n" "$@"
}

docker compose start consul.internal.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL} vault.internal.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}
echo "Waiting for Vault to come online"
until $(curl --output /dev/null --silent --head --fail http://vault.internal.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}:8200); do
    printf '.'
    sleep 5
done
echo " "

unseal_key=$(cat ./vault/key.txt)
robot --variable key:${unseal_key} -d install/log ./vault/unseal.robot

docker-compose start cicdtoolbox-db.internal.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL} keycloak.services.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}
echo "Waiting for Keycloak to come online"
until $(curl --output /dev/null --silent --head --fail http://keycloak.services.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}:8080); do
    printf '.'
    sleep 5
done
echo " "
docker compose start 
echo "****************************************************************************************************************"
echo " Waiting for the containers to come up"
echo "****************************************************************************************************************"
echo " Gitea"
let t=0
until $(curl --output /dev/null --silent --head --insecure --fail https://gitea.tooling.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}:3000); do
    spin
done
endspin

echo "Pulp"
let t=0
until $(curl --output /dev/null --insecure --silent --head --fail https://pulp.tooling.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}); do
    spin
done
endspin

echo "Jenkins"
let t=0
until $(curl --output /dev/null --insecure --silent --head --fail https://jenkins.tooling.${DOMAIN_NAME_SL}.${DOMAIN_NAME_TL}:8084/whoAmI); do
    spin
done
endspin
echo "****************************************************************************************************************"
echo " Validating install"
echo "****************************************************************************************************************"
robot --variable VALID_PASSWORD:${default_user_password} -d install/tests/ install_tests
robot --variable VALID_PASSWORD:${default_user_password} -d install/tests/ -o ./install/log/runner.xml -l ./install/log/runner_log.html -r ./install/log/runner_report.html ./buildnode/runner_validate.robot
networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.16.8.0/21

include:
  - pulp/compose.yaml

volumes:
  cicdtoolbox_db_data: null
  cicdtoolbox_db_conf: null
  gitea:
    driver: local
  jenkins_certs: null
  jenkins_data: null
  jenkins_conf: null
  ldap_data: null
  nexus-work: null
  nexus-data: null
  consul-config: null
  consul-data: null
  vault-config: null
  vault-policies: null
  vault-data: null
  vault-logs: null

secrets:
  ca_crt:
    file: ./vault/certs/ca.crt
  cicdtoolbox-db_key:
    file: ./vault/certs/cicdtoolbox-db.internal.provider.test.pem
  cicdtoolbox-db_crt:
    file: ./vault/certs/cicdtoolbox-db.internal.provider.test.crt
  gitea_key:
    file: ./vault/certs/gitea.tooling.provider.test.pem
  gitea_crt:
    file: ./vault/certs/gitea.tooling.provider.test.crt
  jenkins_key:
    file: ./vault/certs/jenkins.tooling.provider.test.pem
  jenkins_crt:
    file: ./vault/certs/jenkins.tooling.provider.test.crt
  dev_jenkins_secret:
    file: ./jenkins_buildnode/Dev_secret.txt
  test_jenkins_secret:
    file: ./jenkins_buildnode/Test_secret.txt
  acc_jenkins_secret:
    file: ./jenkins_buildnode/Acc_secret.txt
  prod_jenkins_secret:
    file: ./jenkins_buildnode/Prod_secret.txt
  build-dev_key:
    file: ./vault/certs/build-dev.delivery.provider.test.pem
  build-dev_crt:
    file: ./vault/certs/build-dev.delivery.provider.test.crt
  build-test_key:
    file: ./vault/certs/build-test.delivery.provider.test.pem
  build-test_crt:
    file: ./vault/certs/build-test.delivery.provider.test.crt
  build-acc_key:
    file: ./vault/certs/build-acc.delivery.provider.test.pem
  build-acc_crt:
    file: ./vault/certs/build-acc.delivery.provider.test.crt
  build-prod_key:
    file: ./vault/certs/build-prod.delivery.provider.test.pem
  build-prod_crt:
    file: ./vault/certs/build-prod.delivery.provider.test.crt
  keycloak_key:
    file: ./vault/certs/keycloak.services.provider.test.pem
  keycloak_crt:
    file: ./vault/certs/keycloak.services.provider.test.crt
  ldap_key:
    file: ./vault/certs/ldap.iam.provider.test.pem
  ldap_crt:
    file: ./vault/certs/ldap.iam.provider.test.crt
  nexus_key:
    file: ./vault/certs/nexus.tooling.provider.test.pem
  nexus_crt:
    file: ./vault/certs/nexus.tooling.provider.test.crt

services:
  cicdtoolbox-db.internal.provider.test:
    container_name: cicdtoolbox-db.internal.provider.test
    build: cicdtoolbox-db
    command: |
      -c ssl=on  -c ssl_cert_file=/var/lib/postgresql/server.crt -c ssl_key_file=/var/lib/postgresql/server.key
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      - 'POSTGRES_MULTIPLE_DATABASES=ldap,gitea,keycloak,terraform,pulp'
      - 'POSTGRES_USER=${postgres_user}'
      - 'POSTGRES_PASSWORD=${postgres_password}'
    secrets:
      - source: cicdtoolbox-db_key
        target: /var/lib/postgresql/server1.key
      - source: cicdtoolbox-db_crt
        target: /var/lib/postgresql/server.crt
      - source: ca_crt
        target: /var/lib/postgresql/root.crt
    networks:
      internal:
        ipv4_address: 172.16.9.2
    expose:
      - '5432'
    volumes:
      - 'cicdtoolbox_db_data:/var/lib/postgresql/data'
      - 'cicdtoolbox_db_conf:/etc/postgresql'
      - './cicdtoolbox-db/docker-entrypoint-initdb-resources:/docker-entrypoint-initdb-resources:ro'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${postgres_user}'
      interval: 5s
      timeout: 5s
      retries: 5

  gitea.tooling.provider.test:
    container_name: gitea.tooling.provider.test
    build: gitea
    depends_on:
      - cicdtoolbox-db.internal.provider.test
      - keycloak.services.provider.test
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__server__DOMAIN=gitea.tooling.provider.test
      - 'GITEA__database__USER=${gitea_db_user}'
      - 'GITEA__database__PASSWD=${gitea_db_password}'
    secrets:
      - source: ca_crt
        target: /usr/local/share/ca-certificates/CICD-toolbox-ca.crt
    networks:
      internal:
        ipv4_address: 172.16.11.3
    volumes:
      - 'gitea:/data'
      - '/etc/timezone:/etc/timezone:ro'
      - '/etc/localtime:/etc/localtime:ro'
    ports:
      - '3000:3000'
    healthcheck:
      test: 'curl --insecure -fSs https://172.16.11.3:3000/api/healthz'
      start_period: 60s
      interval: 5s
      timeout: 5s
      retries: 5

  jenkins.tooling.provider.test:
    container_name: jenkins.tooling.provider.test
    build: ./jenkins
    restart: unless-stopped
    privileged: true
    user: root
    networks:
      internal:
        ipv4_address: 172.16.11.8
    environment:
      - 'JENKINS_ADMIN_ID=${jenkins_admin}'
      - 'JENKINS_ADMIN_PASSWORD=${jenkins_admin_password}'
      - 'NETCICD_PASSWORD=${default_user_password}'
      - 'GIT_PASSWORD=${git_password}'
      - GITEA_IP=172.16.11.3
      - JENKINS_IP=172.16.11.8
      - NEXUS_IP=172.16.11.9
      - 'JENKINS_NEXUS_PASSWORD=${jenkins_nexus_password}'
    secrets:
      - source: jenkins_key
        target: /var/jenkins_home/jenkins.tooling.provider.test.pem
      - source: jenkins_crt
        target: /var/jenkins_home/jenkins.tooling.provider.test.crt
    volumes:
      - 'jenkins_certs:/certs/client'
      - 'jenkins_data:/var/jenkins_home'
      - 'jenkins_conf:/var/jenkins_conf'
    expose: 
      - 8084
      - '50000'
    ports:
      - '8084:8084'
    depends_on:
      - keycloak.services.provider.test
    healthcheck:
      test: 'curl --insecure -fSs https://jenkins.tooling.provider.test:8084/static/%3Canystring%3E/images/svgs/logo.svg'
      start_period: 60s
      interval: 5s
      timeout: 5s
      retries: 5

  build-dev.delivery.provider.test:
    container_name: build-dev.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: Dev
      ANSIBLE_TF_DIR: AppCICD
      ARM_SKIP_PROVIDER_REGISTRATION: 'true'
      RUNNER_TOKEN: '${RUNNER_TOKEN}'
    secrets:
      - source: dev_jenkins_secret
        target: /home/jenkins/secret-file.txt
    volumes: 
      - '~/images:/home/jenkins/images'
    depends_on:
      - jenkins.tooling.provider.test
      - gitea.tooling.provider.test
    networks:
      internal:
        ipv4_address: 172.16.12.2
  build-test.delivery.provider.test:
    container_name: build-test.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: Test
      ANSIBLE_TF_DIR: AppCICD
      ARM_SKIP_PROVIDER_REGISTRATION: 'true'
      RUNNER_TOKEN: '${RUNNER_TOKEN}'
    secrets:
      - source: test_jenkins_secret
        target: /home/jenkins/secret-file.txt
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.3

  build-acc.delivery.provider.test:
    container_name: build-acc.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: Acc
      ANSIBLE_TF_DIR: AppCICD
      ARM_SKIP_PROVIDER_REGISTRATION: 'true'
      RUNNER_TOKEN: '${RUNNER_TOKEN}'
    secrets:
      - source: acc_jenkins_secret
        target: /home/jenkins/secret-file.txt
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.4

  build-prod.delivery.provider.test:
    container_name: build-prod.delivery.provider.test
    build:
      context: ./jenkins_buildnode
      dockerfile: Dockerfile
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      BUILD_ENVIRONMENT: Prod
      ANSIBLE_TF_DIR: AppCICD
      ARM_SKIP_PROVIDER_REGISTRATION: 'true'
      RUNNER_TOKEN: '${RUNNER_TOKEN}'
    secrets:
      - source: prod_jenkins_secret
        target: /home/jenkins/secret-file.txt
    expose:
      - '50000'
    networks:
      internal:
        ipv4_address: 172.16.12.5

  keycloak.services.provider.test:
    container_name: keycloak.services.provider.test
    build: keycloak
    command: ["start"]
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    environment:
      KEYCLOAK_ADMIN: '${keycloak_admin}'
      KEYCLOAK_ADMIN_PASSWORD: '${keycloak_admin_password}'
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true' 
      KC_DB: postgres
      KC_DB_URL_DATABASE: keycloak 
      KC_DB_URL_HOST: cicdtoolbox-db.internal.provider.test 
      KC_DB_URL_PORT: 5432 
      KC_DB_SCHEMA: public
      KC_DB_USERNAME: '${keycloak_db_user}'
      KC_DB_PASSWORD: '${keycloak_db_password}' 
      KC_HOSTNAME: keycloak.services.provider.test 
      KC_HTTPS_CERTIFICATE_FILE: '/etc/x509/https/tls.crt'
      KC_HTTPS_CERTIFICATE_KEY_FILE: '/etc/x509/https/tls.key'
      QUARKUS_TRANSACTION_MANAGER_ENABLE_RECOVERY: 'true' 
      JDBC_PARAMS: ssl=true&sslmode=verify-ca&sslrootcert=/etc/pki/ca-trust/source/anchors/ca.crt
    secrets:
      - source: keycloak_key
        target: /etc/x509/https/tls.key
      - source: keycloak_crt
        target: /etc/x509/https/tls.crt
    networks:
      internal:
        ipv4_address: 172.16.10.11
    expose:
      - 8080
      - 8443
    ports:
      - '8080:8080'
      - '8443:8443'
    healthcheck:
      test: 'curl --head --insecure -fSs https://172.16.10.11:9000/health/ready'
      start_period: 60s
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      - cicdtoolbox-db.internal.provider.test

  ldap.iam.provider.test:
    container_name: ldap.iam.provider.test
    build: lldap
    restart: unless-stopped
    hostname: ldap
    expose:
      - '3890'
    ports:
      - '17170:17170'
    secrets:
      - source: ldap_key
        target: /data/key.pem
      - source: ldap_crt
        target: /data/cert.crt
    volumes:
      - './lldap/data:/data'
    environment:
      - UID=1000
      - GID=1000
      - TZ=Europe/Amsterdam
      - LLDAP_LDAP_BASE_DN=dc=provider,dc=test
      - LLDAP_HTTP_URL = "http://ldap.iam.provider.test"
      # - LLDAP_LDAP_USER_PASS='${ldap_admin_password}'
      # - LLDAP_KEY_FILE = "/data/key.pem"
      # - LLDAP_LDAPS_OPTIONS__ENABLED = TRUE
      # - LLDAP_LDAPS_OPTIONS__PORT = 6360
      - LLDAP_LDAPS_OPTIONS__CERT_FILE = "/data/cert.crt"
      - LLDAP_LDAPS_OPTIONS__KEY_FILE = "/data/key.pem"
      # - LLDAP_DATABASE_URL=postgres://'${ldap_db_user}':'${ldap_db_password}'@cicdtoolbox-db.internal.provider.test/ldap
    networks:
      internal:
        ipv4_address: 172.16.8.11
    healthcheck:
      test: 'curl --insecure -fSs http://172.16.8.11:17170/login'
      start_period: 60s
      interval: 5s
      timeout: 5s
      retries: 5

  consul.internal.provider.test:
    container_name: consul.internal.provider.test
    build:
      context: ./vault
      dockerfile: docker/Dockerfile-consul
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    networks:
      internal:
        ipv4_address: 172.16.9.4
    volumes:
      - 'consul-data:/consul/data'

  vault.internal.provider.test:
    container_name: vault.internal.provider.test
    build:
      context: ./vault
      dockerfile: docker/Dockerfile-vault
    depends_on:
      - consul.internal.provider.test
    restart: unless-stopped
    init: true
    stop_signal: SIGINT
    stop_grace_period: 15s
    networks:
      internal:
        ipv4_address: 172.16.9.5
    expose:
      - 8200
    ports:
      - '8200:8200'
    volumes:
      - 'vault-config:/vault/config'
      - 'vault-policies:/vault/policies'
      - 'vault-data:/vault/data'
      - 'vault-logs:/vault/logs'
    environment:
      - 'VAULT_ADDR=http://vault.internal.provider.test:8200'
      - 'VAULT_API_ADDR=http://vault.internal.provider.test:8200'
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "https://vault.internal.provider.test:8200/v1/sys/health?standbyok=true" ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

  seleniumffhost.internal.provider.test:
    container_name: seleniumffhost.internal.provider.test
    image: 'selenium/standalone-firefox:latest'
    restart: unless-stopped
    expose:
      - 4444
    ports:
      - '7901:7900'
    shm_size: '2gb'
    networks:
      internal:
        ipv4_address: 172.16.10.100

  seleniumgchost.internal.provider.test:
    container_name: seleniumgchost.internal.provider.test
    image: 'selenium/standalone-chrome:latest'
    restart: unless-stopped
    expose:
      - 4444
    ports:
      - '7900:7900'
    shm_size: '2gb'
    networks:
      internal:
        ipv4_address: 172.16.10.101
